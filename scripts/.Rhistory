library("RSQLServer", lib.loc="~/R/win-library/3.2")
startTime1 <- Sys.time()
sqlconn <- dbConnect(SQLServer(), 'sqldev01_debug:1433/ttool_dch_latest;user=sql_user;password=A9NBRsNel2')
dbGetInfo(sqlconn)
result <- dbSendQuery(conn = sqlconn, statement = 'SELECT [AR21_EmploymentStatus_LST],[AR26_PrimaryIncome_MNY],[AR67_CurrentBalance_MNY] FROM [ttool].[RMBS_ASSETS]')
dframe <- fetch(result, -1)
dbDisconnect(sqlconn)
# View(dframe)
# data(dframe)
sumAR67 <- sum(dframe$AR67_CurrentBalance_MNY, na.rm=TRUE)
aggAR25 <- aggregate(x = dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
aggAR67 <- aggregate(x = dframe$AR67_CurrentBalance_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
div <- data.frame(aggAR67[1], sumAR67)
res <- data.frame(aggAR67[1], (aggAR25[2]*aggAR67[2])/sumAR67)
res
#crtbal.emplstat <- aggregate(x = (dframe$AR26_PrimaryIncome_MNY *  dframe$AR67_CurrentBalance_MNY)/sumAR67, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum)
#str(crtbal.emplstat)
endTime1 <- Sys.time()
timeRun <- difftime(endTime1,startTime1,units="secs")
timeRun
#boxplot(res$Group.1, res$x)
#histogram(res$Group.1, res$x)
#https://docs.microsoft.com/en-us/sql/advanced-analytics/r-services/sql-server-r-services-tutorials
library("RSQLServer", lib.loc="~/R/win-library/3.2")
startTime1 <- Sys.time()
sqlconn <- dbConnect(SQLServer(), 'sqldev01_debug:1433/ttool_ecb_latest;user=sql_user;password=A9NBRsNel2')
dbGetInfo(sqlconn)
result <- dbSendQuery(conn = sqlconn, statement = 'SELECT [AR21_EmploymentStatus_LST],[AR26_PrimaryIncome_MNY],[AR67_CurrentBalance_MNY] FROM [ttool].[RMBS_ASSETS]')
dframe <- fetch(result, -1)
dbDisconnect(sqlconn)
# View(dframe)
# data(dframe)
sumAR67 <- sum(dframe$AR67_CurrentBalance_MNY, na.rm=TRUE)
aggAR25 <- aggregate(x = dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
aggAR67 <- aggregate(x = dframe$AR67_CurrentBalance_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
div <- data.frame(aggAR67[1], sumAR67)
res <- data.frame(aggAR67[1], (aggAR25[2]*aggAR67[2])/sumAR67)
res
#crtbal.emplstat <- aggregate(x = (dframe$AR26_PrimaryIncome_MNY *  dframe$AR67_CurrentBalance_MNY)/sumAR67, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum)
#str(crtbal.emplstat)
endTime1 <- Sys.time()
timeRun <- difftime(endTime1,startTime1,units="secs")
timeRun
#boxplot(res$Group.1, res$x)
#histogram(res$Group.1, res$x)
#https://docs.microsoft.com/en-us/sql/advanced-analytics/r-services/sql-server-r-services-tutorials
library("RSQLServer", lib.loc="~/R/win-library/3.2")
startTime1 <- Sys.time()
sqlconn <- dbConnect(SQLServer(), 'sqldev01_debug:1433/ttool_ecb_latest;user=sql_user;password=A9NBRsNel2')
dbGetInfo(sqlconn)
result <- dbSendQuery(conn = sqlconn, statement = 'SELECT [AR21_EmploymentStatus_LST],[AR26_PrimaryIncome_MNY],[AR67_CurrentBalance_MNY] FROM [ttool].[RMBS_ASSETS]')
dframe <- fetch(result, -1)
dbDisconnect(sqlconn)
# View(dframe)
# data(dframe)
sumAR67 <- sum(dframe$AR67_CurrentBalance_MNY, na.rm=TRUE)
aggAR25 <- aggregate(x = dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
aggAR67 <- aggregate(x = dframe$AR67_CurrentBalance_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
div <- data.frame(aggAR67[1], sumAR67)
res <- data.frame(aggAR67[1], (aggAR25[2]*aggAR67[2])/sumAR67)
res
#crtbal.emplstat <- aggregate(x = (dframe$AR26_PrimaryIncome_MNY *  dframe$AR67_CurrentBalance_MNY)/sumAR67, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum)
#str(crtbal.emplstat)
endTime1 <- Sys.time()
timeRun <- difftime(endTime1,startTime1,units="secs")
timeRun
#boxplot(res$Group.1, res$x)
#histogram(res$Group.1, res$x)
#https://docs.microsoft.com/en-us/sql/advanced-analytics/r-services/sql-server-r-services-tutorials
library("RODBC")
startTime1 <- Sys.time()
cn <- odbcDriverConnect(connection="Driver={SQL Server Native Client 11.0};server=sqldev01_debug;database=ttool_ecb_latest;trusted_connection=yes;")
dframe <- sqlQuery(cn, "SELECT [AR21_EmploymentStatus_LST],[AR26_PrimaryIncome_MNY],[AR67_CurrentBalance_MNY] FROM [ttool].[RMBS_ASSETS]")
#View(dframe)
odbcClose(cn)
sumAR67 <- sum(dframe$AR67_CurrentBalance_MNY, na.rm=TRUE)
aggAR25 <- aggregate(x = dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
aggAR67 <- aggregate(x = dframe$AR67_CurrentBalance_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
div <- data.frame(aggAR67[1], sumAR67)
res <- data.frame(aggAR67[1], (aggAR25[2]*aggAR67[2])/sumAR67)
res
#crtbal.emplstat <- aggregate(x = (dframe$AR26_PrimaryIncome_MNY *  dframe$AR67_CurrentBalance_MNY)/sumAR67, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum)
#str(crtbal.emplstat)
endTime1 <- Sys.time()
timeRun <- difftime(endTime1,startTime1,units="secs")
timeRun
library("RSQLServer", lib.loc="~/R/win-library/3.2")
startTime1 <- Sys.time()
sqlconn <- dbConnect(SQLServer(), 'sqldev01_debug:1433/ttool_ecb_latest;user=sql_user;password=A9NBRsNel2')
dbGetInfo(sqlconn)
result <- dbSendQuery(conn = sqlconn, statement = 'SELECT [AR21_EmploymentStatus_LST],[AR26_PrimaryIncome_MNY],[AR67_CurrentBalance_MNY] FROM [ttool].[RMBS_ASSETS]')
dframe <- fetch(result, -1)
dbDisconnect(sqlconn)
# View(dframe)
# data(dframe)
sumAR67 <- sum(dframe$AR67_CurrentBalance_MNY, na.rm=TRUE)
aggAR25 <- aggregate(x = dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
aggAR67 <- aggregate(x = dframe$AR67_CurrentBalance_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
div <- data.frame(aggAR67[1], sumAR67)
res <- data.frame(aggAR67[1], (aggAR25[2]*aggAR67[2])/sumAR67)
res
#crtbal.emplstat <- aggregate(x = (dframe$AR26_PrimaryIncome_MNY *  dframe$AR67_CurrentBalance_MNY)/sumAR67, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum)
#str(crtbal.emplstat)
endTime1 <- Sys.time()
timeRun <- difftime(endTime1,startTime1,units="secs")
timeRun
#boxplot(res$Group.1, res$x)
#histogram(res$Group.1, res$x)
#https://docs.microsoft.com/en-us/sql/advanced-analytics/r-services/sql-server-r-services-tutorials
a1 <- c(0.1, 0.2)
a2 <- c(NaN, 0.3)
rowSums(cbind(a1,a2), na.rm = TRUE)
res
res
library("RODBC")
startTime1 <- Sys.time()
cn <- odbcDriverConnect(connection="Driver={SQL Server Native Client 11.0};server=sqldev01_debug;database=ttool_dch_latest;trusted_connection=yes;")
dframe <- sqlQuery(cn, "SELECT [AR21_EmploymentStatus_LST],[AR26_PrimaryIncome_MNY],[AR67_CurrentBalance_MNY] FROM [ttool].[RMBS_ASSETS]")
#View(dframe)
odbcClose(cn)
sumAR67 <- sum(dframe$AR67_CurrentBalance_MNY, na.rm=TRUE)
aggAR25 <- aggregate(x = dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
aggAR67 <- aggregate(x = dframe$AR67_CurrentBalance_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
div <- data.frame(aggAR67[1], sumAR67)
res <- data.frame(aggAR67[1], (aggAR25[2]*aggAR67[2])/sumAR67)
res
#crtbal.emplstat <- aggregate(x = (dframe$AR26_PrimaryIncome_MNY *  dframe$AR67_CurrentBalance_MNY)/sumAR67, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum)
#str(crtbal.emplstat)
endTime1 <- Sys.time()
timeRun <- difftime(endTime1,startTime1,units="secs")
timeRun
sumAR67
sum(dframe$AR67_CurrentBalance_MNY)
prodSum <- aggregate(x = dframe$AR67_CurrentBalance_MNY * dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
prodSum
aggAR67[1]
res1 <- data.frame(aggAR67[1], (prodSum[2])/sumAR67)
res1
options(dec = 20)
res1 <- data.frame(aggAR67[1], (prodSum[2])/sumAR67)
res1
options(digits = 20)
res1
res
aggAR26 <- aggregate(x = dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
aggAR67x26 <- aggregate(x = dframe$AR67_CurrentBalance_MNY * dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
res <- data.frame(aggAR67x26[1], (aggAR26[2]*aggAR67x26[2]))
res
aggAR67x26[1]
aggAR26[2]
res <- data.frame(aggAR67x26[1], aggAR67x26[2]/aggAR26[2])
res
library("RODBC")
startTime1 <- Sys.time()
cn <- odbcDriverConnect(connection="Driver={SQL Server Native Client 11.0};server=sqldev01_debug;database=ttool_ecb_latest;trusted_connection=yes;")
dframe <- sqlQuery(cn, "SELECT [AR21_EmploymentStatus_LST],[AR26_PrimaryIncome_MNY],[AR67_CurrentBalance_MNY] FROM [ttool].[RMBS_ASSETS]")
#View(dframe)
odbcClose(cn)
#sumAR67 <- sum(dframe$AR67_CurrentBalance_MNY, na.rm=TRUE)
aggAR26 <- aggregate(x = dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
aggAR67x26 <- aggregate(x = dframe$AR67_CurrentBalance_MNY * dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
res <- data.frame(aggAR67x26[1], aggAR67x26[2]/aggAR26[2])
res
#crtbal.emplstat <- aggregate(x = (dframe$AR26_PrimaryIncome_MNY *  dframe$AR67_CurrentBalance_MNY)/sumAR67, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum)
#str(crtbal.emplstat)
endTime1 <- Sys.time()
timeRun <- difftime(endTime1,startTime1,units="secs")
timeRun
options(digits = 20)
library("RODBC")
startTime1 <- Sys.time()
cn <- odbcDriverConnect(connection="Driver={SQL Server Native Client 11.0};server=sqldev01_debug;database=ttool_ecb_latest;trusted_connection=yes;")
dframe <- sqlQuery(cn, "SELECT [AR21_EmploymentStatus_LST],[AR26_PrimaryIncome_MNY],[AR67_CurrentBalance_MNY] FROM [ttool].[RMBS_ASSETS]")
#View(dframe)
odbcClose(cn)
startTime2 <- Sys.time()
#sumAR67 <- sum(dframe$AR67_CurrentBalance_MNY, na.rm=TRUE)
aggAR26 <- aggregate(x = dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
aggAR67x26 <- aggregate(x = dframe$AR67_CurrentBalance_MNY * dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
res <- data.frame(aggAR67x26[1], aggAR67x26[2]/aggAR26[2])
res
#crtbal.emplstat <- aggregate(x = (dframe$AR26_PrimaryIncome_MNY *  dframe$AR67_CurrentBalance_MNY)/sumAR67, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum)
#str(crtbal.emplstat)
endTime1 <- Sys.time()
timeRun <- difftime(endTime1,startTime1,units="secs")
timeRun
timeRunNoFetch <- difftime(endTime1,startTime2,units="secs")
timeRunNoFetch
options(digits = 20)
library("RSQLServer", lib.loc="~/R/win-library/3.2")
startTime1 <- Sys.time()
sqlconn <- dbConnect(SQLServer(), 'sqldev01_debug:1433/ttool_ecb_latest;user=sql_user;password=A9NBRsNel2')
dbGetInfo(sqlconn)
result <- dbSendQuery(conn = sqlconn, statement = 'SELECT [AR21_EmploymentStatus_LST],[AR26_PrimaryIncome_MNY],[AR67_CurrentBalance_MNY] FROM [ttool].[RMBS_ASSETS]')
dframe <- fetch(result, -1)
dbDisconnect(sqlconn)
startTime2 <- Sys.time()
#sumAR67 <- sum(dframe$AR67_CurrentBalance_MNY, na.rm=TRUE)
aggAR26 <- aggregate(x = dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
aggAR67x26 <- aggregate(x = dframe$AR67_CurrentBalance_MNY * dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
res <- data.frame(aggAR67x26[1], aggAR67x26[2]/aggAR26[2])
res
#crtbal.emplstat <- aggregate(x = (dframe$AR26_PrimaryIncome_MNY *  dframe$AR67_CurrentBalance_MNY)/sumAR67, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum)
#str(crtbal.emplstat)
endTime1 <- Sys.time()
timeRun <- difftime(endTime1,startTime1,units="secs")
timeRun
timeRunNoFetch <- difftime(endTime1,startTime2,units="secs")
timeRunNoFetch
#boxplot(res$Group.1, res$x)
#histogram(res$Group.1, res$x)
#https://docs.microsoft.com/en-us/sql/advanced-analytics/r-services/sql-server-r-services-tutorials
library("RODBC")
startTime1 <- Sys.time()
cn <- odbcDriverConnect(connection="Driver={SQL Server Native Client 11.0};server=sqldev01_debug;database=ttool_ecb_latest;trusted_connection=yes;")
dframe <- sqlQuery(cn, "SELECT [AR21_EmploymentStatus_LST],[AR26_PrimaryIncome_MNY],[AR67_CurrentBalance_MNY] FROM [ttool].[RMBS_ASSETS]")
#View(dframe)
odbcClose(cn)
startTime2 <- Sys.time()
#sumAR67 <- sum(dframe$AR67_CurrentBalance_MNY, na.rm=TRUE)
aggAR26 <- aggregate(x = dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
aggAR67x26 <- aggregate(x = dframe$AR67_CurrentBalance_MNY * dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
res <- data.frame(aggAR67x26[1], aggAR67x26[2]/aggAR26[2])
res
#crtbal.emplstat <- aggregate(x = (dframe$AR26_PrimaryIncome_MNY *  dframe$AR67_CurrentBalance_MNY)/sumAR67, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum)
#str(crtbal.emplstat)
endTime1 <- Sys.time()
timeRun <- difftime(endTime1,startTime1,units="secs")
timeRun
timeRunNoFetch <- difftime(endTime1,startTime2,units="secs")
timeRunNoFetch
histogram(res)
histogram(res$Group.1, res$x)
histogram(as.factor(res$Group.1), res$x)
boxplot(res$Group.1, res$x)
boxplot(as.factor(res$Group.1), res$x)
library(ggplot2)
ggp <- ggplot(res,aes(x=res$x))
install.packages("ggplot2")
library(ggplot2)
ggp <- ggplot(res,aes(x=res$x))
ggp <- ggplot(res)
res$x
res$Group.1
ggp <- ggplot(res,aes(x=res$Group.1))
ggp <- ggplot(res$x,aes(x=res$Group.1))
hist(res$Group.1)
hist(as.factor(res$Group.1))
res$Group.1
res$x
hist(res$x, as.factor(res$Group.1))
hist(res, as.factor(res$Group.1))
as.factor(res$Group.1)
x <- as.factor(res$Group.1)
y <- res$Group.1
y
x
y <- res$x
y
plot(x,y)
hist(x, y)
hist(y, x)
library(ggplot2)
ggp <- ggplot(y,aes(x=x))
ggp <- ggplot(y, x)
ggp <- ggplot(y,aes(x))
ggp <- ggplot(res$Group.1,aes(x))
ggp <- ggplot(data=res,aes(x=res$x, y=res$Group.1))
ggplot(data=res,aes(x=res$x, y=res$Group.1))
ggp + geom_histogram(fill="lightgreen")
ggp + geom_histogram(fill="lightblue",aes(y=..count../sum(..count..)))
res$Group.1
ggp <- ggplot(data=res,aes(x=res$Group.1, y=res$x))
ggp + geom_histogram(fill="lightgreen")
ggp + geom_histogram(fill="lightblue",aes(y=..count../sum(..count..)))
res$Group.1
res$x
ggp <- ggplot(data=res,aes(x=as.factor(res$Group.1), y=res$x))
ggp + geom_histogram(fill="lightgreen")
ggp + geom_histogram(fill="lightblue",aes(y=..count../sum(..count..)))
ggp <- ggplot(data=res,aes(x=as.factor(res$Group.1), y=res$x))
ggp + geom_histogram(fill="lightblue",aes(y=..count../sum(..count..)))
ggp + geom_histogram(fill="lightblue",aes(y=..count../sum(..count..)))
ggp <- ggplot(data=res,aes(x=as.factor(res$Group.1)))
ggp + geom_histogram(fill="lightblue",aes(y=..count../sum(..count..)))
library(ggplot2)
ggp <- ggplot(data=res,aes(x=as.factor(res$Group.1)))
ggp + geom_histogram(fill="lightgreen")
ggp + geom_histogram(fill="lightblue",aes(y=..count../sum(..count..)))
ggp + geom_histogram(fill="lightblue",aes(x=as.factor(res$Group.1)))
res$Group.1
ggp + geom_histogram(fill="lightblue",aes(x=as.factor(res$Group.1), y = res$Group.1))
ggp + geom_bar(fill="lightblue",aes(x=as.factor(res$Group.1), y = res$Group.1))
ggplot(data=res,aes(x=as.factor(res$Group.1))) + geom_bar()
ggplot(data=res$x,aes(x=as.factor(res$Group.1))) + geom_bar()
ggplot(data=data.frame(res$x),aes(x=as.factor(res$Group.1))) + geom_bar()
x <- as.factor(as.res$Group.1)
x
y
plot(x,y)
ggplot(data=data.frame(x),aes(x=y)) + geom_bar()
ggplot(data=data.frame(y),aes(x=y)) + geom_bar()
x
ggplot(data=data.frame(x),aes(x=y)) + geom_bar()
ggplot(data=data.frame(x),aes(x=as.factor(res$Group.1))) + geom_bar()
ggplot(data=data.frame(x),aes(x=x)) + geom_bar()
x <- as.factor(as.res$Group.1)
y <- res$x
plot(x,y)
library(ggplot2)
ggplot(data=data.frame(x),aes(x=x)) + geom_bar()
ggplot(data=data.frame(x),aes(x=y)) + geom_bar()
ggplot(data=data.frame(as.factor(as.res$Group.1),aes(x=res$x)) + geom_bar()
library("RSQLServer", lib.loc="~/R/win-library/3.2")
startTime1 <- Sys.time()
sqlconn <- dbConnect(SQLServer(), 'sqldev01_debug:1433/ttool_ecb_latest;user=sql_user;password=A9NBRsNel2')
dbGetInfo(sqlconn)
result <- dbSendQuery(conn = sqlconn, statement = 'SELECT [AR21_EmploymentStatus_LST],[AR26_PrimaryIncome_MNY],[AR67_CurrentBalance_MNY] FROM [ttool].[RMBS_ASSETS]')
dframe <- fetch(result, -1)
dbDisconnect(sqlconn)
startTime2 <- Sys.time()
#sumAR67 <- sum(dframe$AR67_CurrentBalance_MNY, na.rm=TRUE)
aggAR26 <- aggregate(x = dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
aggAR67x26 <- aggregate(x = dframe$AR67_CurrentBalance_MNY * dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
res <- data.frame(aggAR67x26[1], aggAR67x26[2]/aggAR26[2])
res
#crtbal.emplstat <- aggregate(x = (dframe$AR26_PrimaryIncome_MNY *  dframe$AR67_CurrentBalance_MNY)/sumAR67, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum)
#str(crtbal.emplstat)
endTime1 <- Sys.time()
timeRun <- difftime(endTime1,startTime1,units="secs")
timeRun
timeRunNoFetch <- difftime(endTime1,startTime2,units="secs")
timeRunNoFetch
x <- as.factor(as.res$Group.1)
y <- res$x
plot(x,y)
#install.packages("ggplot2")
library(ggplot2)
ggplot(data=data.frame(as.factor(as.res$Group.1)),aes(x=res$x)) + geom_bar()
#boxplot(as.factor(res$Group.1), res$x)
#histogram(as.factor(res$Group.1), res$x)
#https://docs.microsoft.com/en-us/sql/advanced-analytics/r-services/sql-server-r-services-tutorials
ggplot(data=data.frame(as.factor(as.res$Group.1)),aes(x=res$x)) + geom_bar()
x <- as.factor(res$Group.1)
y <- res$x
plot(x,y)
library(ggplot2)
ggplot(data=data.frame(as.factor(res$Group.1)),aes(x=res$x)) + geom_bar()
library("RSQLServer", lib.loc="~/R/win-library/3.2")
startTime1 <- Sys.time()
sqlconn <- dbConnect(SQLServer(), 'sqldev01_debug:1433/ttool_ecb_latest;user=sql_user;password=A9NBRsNel2')
dbGetInfo(sqlconn)
result <- dbSendQuery(conn = sqlconn, statement = 'SELECT [AR21_EmploymentStatus_LST],[AR26_PrimaryIncome_MNY],[AR67_CurrentBalance_MNY] FROM [ttool].[RMBS_ASSETS]')
dframe <- fetch(result, -1)
dbDisconnect(sqlconn)
startTime2 <- Sys.time()
#sumAR67 <- sum(dframe$AR67_CurrentBalance_MNY, na.rm=TRUE)
aggAR26 <- aggregate(x = dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
aggAR67x26 <- aggregate(x = dframe$AR67_CurrentBalance_MNY * dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
res <- data.frame(aggAR67x26[1], aggAR67x26[2]/aggAR26[2])
res
#crtbal.emplstat <- aggregate(x = (dframe$AR26_PrimaryIncome_MNY *  dframe$AR67_CurrentBalance_MNY)/sumAR67, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum)
#str(crtbal.emplstat)
endTime1 <- Sys.time()
timeRun <- difftime(endTime1,startTime1,units="secs")
timeRun
timeRunNoFetch <- difftime(endTime1,startTime2,units="secs")
timeRunNoFetch
x <- as.factor(res$Group.1)
y <- res$x
plot(x,y)
#install.packages("ggplot2")
library(ggplot2)
ggplot(data=data.frame(as.factor(res$Group.1)),aes(x=res$x)) + geom_bar()
#boxplot(as.factor(res$Group.1), res$x)
#histogram(as.factor(res$Group.1), res$x)
#https://docs.microsoft.com/en-us/sql/advanced-analytics/r-services/sql-server-r-services-tutorials
library("RSQLServer", lib.loc="~/R/win-library/3.2")
startTime1 <- Sys.time()
sqlconn <- dbConnect(SQLServer(), 'sqldev01_debug:1433/ttool_ecb_latest;user=sql_user;password=A9NBRsNel2')
# dbGetInfo(sqlconn)
result <- dbSendQuery(conn = sqlconn, statement = 'SELECT [AR21_EmploymentStatus_LST],[AR26_PrimaryIncome_MNY],[AR67_CurrentBalance_MNY] FROM [ttool].[RMBS_ASSETS]')
dframe <- fetch(result, -1)
dbDisconnect(sqlconn)
startTime2 <- Sys.time()
#sumAR67 <- sum(dframe$AR67_CurrentBalance_MNY, na.rm=TRUE)
aggAR26 <- aggregate(x = dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
aggAR67x26 <- aggregate(x = dframe$AR67_CurrentBalance_MNY * dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
res <- data.frame(aggAR67x26[1], aggAR67x26[2]/aggAR26[2])
res
#crtbal.emplstat <- aggregate(x = (dframe$AR26_PrimaryIncome_MNY *  dframe$AR67_CurrentBalance_MNY)/sumAR67, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum)
#str(crtbal.emplstat)
endTime1 <- Sys.time()
timeRun <- difftime(endTime1,startTime1,units="secs")
timeRun
timeRunNoFetch <- difftime(endTime1,startTime2,units="secs")
timeRunNoFetch
x <- as.factor(res$Group.1)
y <- res$x
plot(x,y)
#install.packages("ggplot2")
library(ggplot2)
ggplot(data=data.frame(as.factor(res$Group.1)),aes(x=res$x)) + geom_bar()
#boxplot(as.factor(res$Group.1), res$x)
#histogram(as.factor(res$Group.1), res$x)
#https://docs.microsoft.com/en-us/sql/advanced-analytics/r-services/sql-server-r-services-tutorials
ggplot(data=data.frame(y),aes(x=x)) + geom_bar()
ggplot(data=data.frame(y),aes(x=x)) + geom_bar()
library(ggplot2)
ggplot(data=data.frame(y),aes(x=x)) + geom_bar()
ggplot(data=data.frame(y),aes(y=x)) + geom_bar()
ggplot(data=data.frame(y),aes(x=y, y=x)) + geom_bar()
ggplot(data=data.frame(y),aes(x='y', y=x)) + geom_bar()
ggplot(data=data.frame(x),aes(x='y', y=y)) + geom_bar()
ggplot(data=data.frame(x),aes(x='employment status', y='WA AR26')) + geom_bar()
x <- as.factor(res$Group.1)
y <- res$x
plot(x,y)
library(ggplot2)
ggplot(data=data.frame(x),aes(x='employment status', y='WA AR26')) + geom_bar()
ggplot(data=data.frame(x), y = y,aes(x='employment status', y='WA AR26')) + geom_bar()
ggplot(data=data.frame(x), y = y,aes(x='employment status', y='WA AR26')) + geom_bar() + stat_bin()
ggplot(data=data.frame(x), y = y,aes(x='employment status', y='WA AR26')) + geom_bar() + stat_ide
ggplot(data=data.frame(x), y = y,aes(x='employment status', y='WA AR26')) + geom_bar() + stat_identity()
ggplot(data=data.frame(x), aes(x='employment status', y='WA AR26')) + geom_bar() + stat_identity()
ggplot(data=data.frame(x), aes(x=x, y='WA AR26')) + geom_bar() + stat_identity()
ggplot(data=data.frame(x), aes(x=x, y=y)) + geom_bar() + stat_identity()
ggplot(data=data.frame(x), aes(x=x, y=y)) + geom_bar() + stat_identity() + geom_contour()
ggplot(data=data.frame(x), aes(x=x, y=y)) + geom_bar() + stat_identity() + geom_area()
ggplot(data=data.frame(x), aes(x=x, y=y)) + stat_identity() + geom_area()
ggplot(data=data.frame(x), aes(x=x, y=y)) + stat_identity() + geom_bar()
library("RSQLServer", lib.loc="~/R/win-library/3.2")
startTime1 <- Sys.time()
sqlconn <- dbConnect(SQLServer(), 'sqldev01_debug:1433/ttool_ecb_latest;trusted_connection=yes;')
# dbGetInfo(sqlconn)
result <- dbSendQuery(conn = sqlconn, statement = 'SELECT [AR21_EmploymentStatus_LST],[AR26_PrimaryIncome_MNY],[AR67_CurrentBalance_MNY] FROM [ttool].[RMBS_ASSETS]')
dframe <- fetch(result, -1)
dbDisconnect(sqlconn)
startTime2 <- Sys.time()
#sumAR67 <- sum(dframe$AR67_CurrentBalance_MNY, na.rm=TRUE)
aggAR26 <- aggregate(x = dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
aggAR67x26 <- aggregate(x = dframe$AR67_CurrentBalance_MNY * dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
res <- data.frame(aggAR67x26[1], aggAR67x26[2]/aggAR26[2])
res
#crtbal.emplstat <- aggregate(x = (dframe$AR26_PrimaryIncome_MNY *  dframe$AR67_CurrentBalance_MNY)/sumAR67, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum)
#str(crtbal.emplstat)
endTime1 <- Sys.time()
timeRun <- difftime(endTime1,startTime1,units="secs")
timeRun
timeRunNoFetch <- difftime(endTime1,startTime2,units="secs")
timeRunNoFetch
x <- as.factor(res$Group.1)
y <- res$x
plot(x,y)
#install.packages("ggplot2")
library(ggplot2)
ggplot(data=data.frame(x), aes(x=x, y=y)) + stat_identity() + geom_bar()
#https://docs.microsoft.com/en-us/sql/advanced-analytics/r-services/sql-server-r-services-tutorials
library("RSQLServer", lib.loc="~/R/win-library/3.2")
startTime1 <- Sys.time()
sqlconn <- dbConnect(SQLServer(), 'sqldev01_debug:1433/ttool_ecb_latest;trusted_connection=yes;')
# dbGetInfo(sqlconn)
result <- dbSendQuery(conn = sqlconn, statement = 'SELECT [AR21_EmploymentStatus_LST],[AR26_PrimaryIncome_MNY],[AR67_CurrentBalance_MNY] FROM [ttool].[RMBS_ASSETS]')
dframe <- fetch(result, -1)
dbDisconnect(sqlconn)
startTime2 <- Sys.time()
#sumAR67 <- sum(dframe$AR67_CurrentBalance_MNY, na.rm=TRUE)
aggAR26 <- aggregate(x = dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
aggAR67x26 <- aggregate(x = dframe$AR67_CurrentBalance_MNY * dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
res <- data.frame(aggAR67x26[1], aggAR67x26[2]/aggAR26[2])
res
#crtbal.emplstat <- aggregate(x = (dframe$AR26_PrimaryIncome_MNY *  dframe$AR67_CurrentBalance_MNY)/sumAR67, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum)
#str(crtbal.emplstat)
endTime1 <- Sys.time()
timeRun <- difftime(endTime1,startTime1,units="secs")
timeRun
timeRunNoFetch <- difftime(endTime1,startTime2,units="secs")
timeRunNoFetch
x <- as.factor(res$Group.1)
y <- res$x
plot(x,y)
#install.packages("ggplot2")
library(ggplot2)
ggplot(data=data.frame(x), aes(x=x, y=y)) + stat_identity() + geom_bar()
#https://docs.microsoft.com/en-us/sql/advanced-analytics/r-services/sql-server-r-services-tutorials
library("RSQLServer", lib.loc="~/R/win-library/3.2")
startTime1 <- Sys.time()
sqlconn <- dbConnect(SQLServer(), 'sqldev01_debug:1433/ttool_ecb_latest;user=sql_user;password=A9NBRsNel2')
# dbGetInfo(sqlconn)
result <- dbSendQuery(conn = sqlconn, statement = 'SELECT [AR21_EmploymentStatus_LST],[AR26_PrimaryIncome_MNY],[AR67_CurrentBalance_MNY] FROM [ttool].[RMBS_ASSETS]')
dframe <- fetch(result, -1)
dbDisconnect(sqlconn)
startTime2 <- Sys.time()
#sumAR67 <- sum(dframe$AR67_CurrentBalance_MNY, na.rm=TRUE)
aggAR26 <- aggregate(x = dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
aggAR67x26 <- aggregate(x = dframe$AR67_CurrentBalance_MNY * dframe$AR26_PrimaryIncome_MNY, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum, na.rm=TRUE)
res <- data.frame(aggAR67x26[1], aggAR67x26[2]/aggAR26[2])
res
#crtbal.emplstat <- aggregate(x = (dframe$AR26_PrimaryIncome_MNY *  dframe$AR67_CurrentBalance_MNY)/sumAR67, by = list(dframe$AR21_EmploymentStatus_LST), FUN = sum)
#str(crtbal.emplstat)
endTime1 <- Sys.time()
timeRun <- difftime(endTime1,startTime1,units="secs")
timeRun
timeRunNoFetch <- difftime(endTime1,startTime2,units="secs")
timeRunNoFetch
x <- as.factor(res$Group.1)
y <- res$x
plot(x,y)
#install.packages("ggplot2")
library(ggplot2)
ggplot(data=data.frame(x), aes(x=x, y=y)) + stat_identity() + geom_bar()
#https://docs.microsoft.com/en-us/sql/advanced-analytics/r-services/sql-server-r-services-tutorials
